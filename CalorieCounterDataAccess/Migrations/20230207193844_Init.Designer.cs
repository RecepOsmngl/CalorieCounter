// <auto-generated />
using System;
using CalorieCounterDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CCalorieCounterDataAccess.Migrations
{
    [DbContext(typeof(CalorieCounterContext))]
    [Migration("20230207193844_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CalorieCounterEntity.FoodCategoryEntity", b =>
                {
                    b.Property<int>("FoodCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodCategoryID"), 1L, 1);

                    b.Property<string>("FoodCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoodCategoryID");

                    b.ToTable("FoodCategoryEntityTable");
                });

            modelBuilder.Entity("CalorieCounterEntity.FoodEntity", b =>
                {
                    b.Property<int>("FoodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodID"), 1L, 1);

                    b.Property<int?>("FoodCalorie")
                        .HasColumnType("int");

                    b.Property<int?>("FoodCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("FoodName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoodID");

                    b.HasIndex("FoodCategoryID");

                    b.ToTable("FoodEntityTable");
                });

            modelBuilder.Entity("CalorieCounterEntity.MealCategoryEntity", b =>
                {
                    b.Property<int>("MealCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealCategoryID"), 1L, 1);

                    b.Property<string>("MealCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MealCategoryID");

                    b.ToTable("MealCategoryEntityTable");
                });

            modelBuilder.Entity("CalorieCounterEntity.MealEntity", b =>
                {
                    b.Property<int>("MealID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealID"), 1L, 1);

                    b.Property<int>("FoodID")
                        .HasColumnType("int");

                    b.Property<int>("FoodPortion")
                        .HasColumnType("int");

                    b.Property<int>("FoodTotalCalorie")
                        .HasColumnType("int");

                    b.Property<int>("MealCategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("MealTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("MealID");

                    b.HasIndex("FoodID");

                    b.HasIndex("MealCategoryID");

                    b.HasIndex("UserID");

                    b.ToTable("MealEntityTable");
                });

            modelBuilder.Entity("CalorieCounterEntity.UserEntity", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<string>("UserGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserHeight")
                        .HasColumnType("int");

                    b.Property<string>("UserMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserWeight")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("UserEntityTable");
                });

            modelBuilder.Entity("CalorieCounterEntity.FoodEntity", b =>
                {
                    b.HasOne("CalorieCounterEntity.FoodCategoryEntity", "FoodCategoryEntity")
                        .WithMany("FoodEntity")
                        .HasForeignKey("FoodCategoryID");

                    b.Navigation("FoodCategoryEntity");
                });

            modelBuilder.Entity("CalorieCounterEntity.MealEntity", b =>
                {
                    b.HasOne("CalorieCounterEntity.FoodEntity", "FoodEntity")
                        .WithMany("MealEntity")
                        .HasForeignKey("FoodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalorieCounterEntity.MealCategoryEntity", "MealCategoryEntity")
                        .WithMany("MealEntity")
                        .HasForeignKey("MealCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalorieCounterEntity.UserEntity", "UserEntity")
                        .WithMany("MealEntity")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodEntity");

                    b.Navigation("MealCategoryEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("CalorieCounterEntity.FoodCategoryEntity", b =>
                {
                    b.Navigation("FoodEntity");
                });

            modelBuilder.Entity("CalorieCounterEntity.FoodEntity", b =>
                {
                    b.Navigation("MealEntity");
                });

            modelBuilder.Entity("CalorieCounterEntity.MealCategoryEntity", b =>
                {
                    b.Navigation("MealEntity");
                });

            modelBuilder.Entity("CalorieCounterEntity.UserEntity", b =>
                {
                    b.Navigation("MealEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
